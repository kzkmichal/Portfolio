@mixin centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin separator {
    background-color: $color-primary-light-2;
    width: 3px;
}

@mixin boxShadow {
    box-shadow: 0 0 2rem rgba($color-black, 0.1);
}

@mixin backgroundImage($size, $position) {
    background-size: $size;
    background-position: $position;
}

@mixin sectionPadding($paddingTop, $paddingBottom) {
    padding-top: $paddingTop;
    padding-bottom: $paddingBottom;
}

@mixin respond($breakpoint) {
    @if $breakpoint==mobile-small {
        @media(max-width: 25em) {
            @content
        }
        ;
    }
    @if $breakpoint==mobile {
        @media(max-width: 37.5em) {
            @content
        }
        ;
    }
    @if $breakpoint==tab-port {
        @media(max-width: 48em) {
            @content
        }
        ;
    }
    @if $breakpoint==tab-port-900px {
        @media(max-width: 56.25em) {
            @content
        }
        ;
    }
    @if $breakpoint==tab-land {
        @media(max-width: 75em) {
            @content
        }
        ;
    }
    @if $breakpoint==big-desktop {
        @media(min-width: 112.5em) {
            @content
        }
        ;
    }
    @if $breakpoint==tab-land-mobile {
        @media(min-width: 48em) {
            @content
        }
        ;
    }
}

@mixin button-reset {
    padding: 0;
    border: none;
    font: inherit;
    color: inherit;
    background-color: transparent;
    cursor: pointer;
}

@mixin cornerBorder($color, $size, $bottom, $left, $top, $right, $width, $height) {
    &:before {
        content: '';
        position: absolute;
        bottom: $bottom;
        left: $left;
        width: $width;
        height: $height;
        background: transparent;
        border: $size solid transparent;
        border-bottom-color: $color;
        border-left-color: $color;
    }
    &:after {
        content: '';
        position: absolute;
        top: $top;
        right: $right;
        width: $width;
        height: $height;
        background: transparent;
        border: $size solid transparent;
        border-top-color: $color;
        border-right-color: $color;
    }
}

@mixin borderAnimation($box-size, $clip-distance, $path-width, $color, $time) {
    $clip-size: $box-size * (1 + $clip-distance * 2);
    &::before,
    &::after {
        color: $color;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        content: '';
        z-index: -5;
        margin: -1* $clip-distance * 100%;
        box-shadow: inset 0 0 0 $path-width;
        border-radius: 0.3rem;
    }
    //top//right//bottom//left
    &::before {
        clip: rect($clip-size*0.75, $clip-size*0.25, $clip-size, 0);
        animation: out $time linear forwards;
    }
    &::after {
        clip: rect(0, $clip-size, $clip-size*0.25, $clip-size*0.75);
        animation: out-after $time linear forwards;
    }
    &:hover {
        &::before {
            animation: in $time linear forwards;
        }
        &::after {
            animation: in-after $time linear forwards;
        }
    }
    @keyframes in {
        0% {
            clip: rect($clip-size*0.75, $clip-size*0.25, $clip-size, 0);
            ;
        }
        25% {
            clip: rect($clip-size*0.5, $path-width, $clip-size, 0);
        }
        50% {
            clip: rect($clip-size*0.25, $path-width, $clip-size*0.75, 0);
        }
        75% {
            clip: rect(0, $path-width, $clip-size*0.5, 0);
        }
        100% {
            clip: rect(0, $clip-size*0.25, $clip-size*0.25, 0);
        }
    }
    @keyframes out {
        0% {
            clip: rect(0, $clip-size*0.25, $clip-size*0.25, 0),
        }
        25% {
            clip: rect(0, $path-width, $clip-size*0.5, 0);
        }
        50% {
            clip: rect($clip-size*0.25, $path-width, $clip-size*0.75, 0);
        }
        75% {
            clip: rect($clip-size*0.5, $path-width, $clip-size, 0);
        }
        100% {
            clip: rect($clip-size*0.75, $clip-size*0.25, $clip-size, 0);
        }
    }
    @keyframes in-after {
        0% {
            clip: rect(0, $clip-size, $clip-size*0.25, $clip-size*0.75);
        }
        25% {
            clip: rect(0, $clip-size, $clip-size*0.5, $clip-size - $path-width);
        }
        50% {
            clip: rect($clip-size*0.25, $clip-size, $clip-size*0.75, $clip-size - $path-width);
        }
        75% {
            clip: rect($clip-size*0.5, $clip-size, $clip-size, $clip-size - $path-width);
        }
        100% {
            clip: rect($clip-size*0.75, $clip-size, $clip-size, $clip-size*0.75);
        }
    }
    @keyframes out-after {
        0% {
            clip: rect($clip-size*0.75, $clip-size, $clip-size, $clip-size*0.75);
        }
        25% {
            clip: rect($clip-size*0.5, $clip-size, $clip-size, $clip-size - $path-width);
        }
        50% {
            clip: rect($clip-size*0.25, $clip-size, $clip-size*0.75, $clip-size - $path-width);
        }
        75% {
            clip: rect(0, $clip-size, $clip-size*0.5, $clip-size - $path-width);
        }
        100% {
            clip: rect(0, $clip-size, $clip-size*0.25, $clip-size*0.75);
        }
    }
}

@mixin borderEffect ($border-width, $initial-width, $initial-height, $final-width, $final-height, $color, ) {
    &:before,
    &:after {
        opacity: 0;
        z-index: -1;
        content: '';
        position: absolute;
        width: 0;
        height: 0;
        // width: $initial-width;
        // height: $initial-height;
        background: transparent;
        border: inset $border-width solid transparent;
        transition: 0.4s all ease;
        transition-delay: 0.1s;
        border-radius: 0.5rem;
    }
    &:before {
        bottom: 0;
        left: 0;
        border-bottom-color: $color;
        border-left-color: $color;
    }
    &:after {
        top: 0;
        right: 0;
        border-top-color: $color;
        border-right-color: $color;
    }
    &:hover:before {
        opacity: 1;
        width: $final-width;
        height: $final-height;
        border-top-color: transparent;
        border-bottom-color: $color;
        border-left-color: $color;
        border-right-color: transparent;
    }
    &:hover:after {
        opacity: 1;
        width: $final-width;
        height: $final-height;
        border-top-color: $color;
        border-right-color: $color;
        border-bottom-color: transparent;
        border-left-color: transparent;
    }
}